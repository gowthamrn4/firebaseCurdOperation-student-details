{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/details/details.component.css","webpack:///./src/app/details/details.component.html","webpack:///./src/app/details/details.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/app/service/data.service.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'studentDetails';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { environment } from '../environments/environment';\nimport { map } from 'rxjs/operators';\nimport {RouterModule} from '@angular/router';\nimport { AngularFireModule } from 'angularfire2';\nimport {AngularFireAuthModule} from 'angularfire2/auth';\nimport {AuthService} from '../app/service/auth.service';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {AngularFireDatabase,AngularFireList, AngularFireDatabaseModule } from 'angularfire2/database';\n\nimport { AppComponent } from './app.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { HomeComponent } from './home/home.component';\nimport { DetailsComponent } from './details/details.component';\nimport { DataService} from './service/data.service';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    HomeComponent,\n    DetailsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularFireAuthModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule,\n    RouterModule.forRoot([\n      {path:'',pathMatch:'full',redirectTo:'home'},\n      {path:'home',component:HomeComponent},\n      {path:'signup',component:SignupComponent},\n      {path:'home',component:HomeComponent},\n      {path:'details',component:DetailsComponent}])\n         ],\n  providers: [AuthService,DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".container{\\r\\n    margin:50px auto;\\r\\n   \\r\\n}\\r\\n.table\\r\\n{\\r\\n    background:lightgray;\\r\\n\\r\\n}\\r\\n.del{\\r\\n       background:red;\\r\\n       color:white;\\r\\n       border-radius:20px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <!-- <div class=\\\"col-md-5\\\">\\n      <form #personForm=\\\"ngForm\\\">\\n      <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"student.name\\\" id=\\\"name\\\" class=\\\"form-control\\\">\\n      <br>\\n      <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"student.email\\\" id=\\\"email\\\" class=\\\"form-control\\\">\\n      <br>\\n      <button class=\\\"btn btn-round btn-info\\\" (click)=\\\"addStudent()\\\">Click</button></form>\\n    </div> -->\\n      <table class=\\\"table\\\" style=\\\"border-bottom:10px solid black;border-radius:10px;max-width:500px;\\\">\\n        <thead class=\\\"bg-dark\\\" style=\\\"color:white\\\">\\n          <th>No</th>\\n          <th>Name</th>\\n          <th>email</th>\\n          <th>Phone Number</th>\\n          <th>Age</th>\\n          <th>Address</th>\\n          <th>Action</th>\\n          <th></th>\\n        </thead>\\n          <tbody *ngFor=\\\"let student of studentArray; let i=index\\\" style=\\\"background:white;\\\">\\n            <td>{{i}}</td>\\n            <td>{{student.name}}</td>\\n            <td>{{student.email}}</td>\\n            <td>{{student.phone}}</td>\\n            <td>{{student.age}}</td>\\n            <td>{{student.address}}</td>\\n            <td><i class=\\\"fa fa-trash fa-2x\\\" (click)=\\\"del(student.$key)\\\"  aria-hidden=\\\"true\\\"></i></td>\\n              <td><i class=\\\"fa fa-pencil-square fa-2x\\\" (click)=\\\"populateForm(student)\\\" aria-hidden=\\\"true\\\"></i>\\n            </td>\\n          </tbody>\\n      </table>\\n      <div class=\\\"del text-center\\\" *ngIf=\\\"showDeletedMessage\\\">\\n          Deleted Successfully\\n      </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport {AngularFireDatabase,AngularFireList } from 'angularfire2/database';\nimport {DataService} from '../service/data.service';\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit{\n  // employees = [\n  //   {name:\"gowtham\",email:\"gowthamrn4@gmail.com\"},\n  //   {name:\"gowtham45\",email:\"gowthamrn14@gmail.com\"}\n  // ];\n  student={\n    name:'',\n    email:''\n  }\n  studentArray = [];\n  showDeletedMessage:boolean;\n  constructor(private dataservice:DataService) { }\n  ngOnInit(){\n \n\n    this.dataservice.getStudent().subscribe(\n      list => {\n            this.studentArray = list.map(item => {\n              return {\n                $key:item.key,\n                ...item.payload.val()\n              };\n            })\n      }\n    );console.log(\"get\"+this.studentArray)\n    this.del;\n  }\n  del($key){\n      this.dataservice.deleteStudent($key);\n      this.showDeletedMessage = true;\n      setTimeout(() => this.showDeletedMessage =false,3000);\n  }\n  populateForm($key){\n    this.dataservice.updateStudent($key);\n  }\n  \n}\n","module.exports = \".container\\r\\n{\\r\\n    background:gray;\\r\\n    padding:43px;\\r\\n}\\r\\n.update\\r\\n{\\r\\n    background:orange;\\r\\n    color:white;\\r\\n    border-radius:20px;\\r\\n}\\r\\n.add\\r\\n{\\r\\n    background:green;\\r\\n    color:white;\\r\\n    border-radius:20px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"heading text-center\\\" style=\\\"font-weight:bold;font-size:30px;color:white\\\">\\n        Student Details\\n  </div>\\n<div class=\\\"row\\\" style=\\\"padding:30px;border:2px solid black\\\">\\n  <div class=\\\"col-md-3\\\" style=\\\"background:burlywood;border-radius:10px;border-bottom:10px solid black;border-right:10px solid black\\\">\\n    <form [formGroup]=\\\"this.dataservice.form\\\" #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n      <input type=\\\"hidden\\\" formControlName=\\\"$key\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Name</label>\\n        <input formControlName=\\\"name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid':submitted && formControls.name.errors}\\\">\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formControls.name.errors\\\">This Field is required</div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label>Email</label>\\n          <input formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid':submitted && formControls.email.errors}\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formControls.email.errors\\\">This Field is required</div>\\n\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Phone Number</label>\\n          <input formControlName=\\\"phone\\\" name=\\\"phone\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid':submitted && formControls.phone.errors}\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formControls.phone.errors\\\">This Field is required</div>\\n       \\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Age</label>\\n          <select formControlName=\\\"age\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid':submitted && formControls.age.errors}\\\">\\n            <option>Select</option>\\n            <option *ngFor=\\\"let number of [20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]\\\">{{number}}</option>\\n          </select>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formControls.age.errors\\\">This Field is required</div>\\n\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Address</label>\\n            <textarea formControlName=\\\"address\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid':submitted && formControls.address.errors}\\\"></textarea>\\n            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formControls.address.errors\\\">This Field is required</div>\\n\\n          </div>\\n         \\n        <div class=\\\"form-group\\\" style=\\\"float:left;padding-left:30px;\\\">\\n            <button class=\\\"btn btn-info text-center\\\">ADD</button>          \\n\\n          </div>\\n         \\n    </form>\\n  \\n\\n     <button class=\\\"btn btn-danger\\\" style=\\\"float:left;margin-left:15px;\\\" (click)=\\\"update(myForm.value)\\\">Update</button>          \\n     <br><br>\\n     <div class=\\\"update text-center\\\" *ngIf=\\\"updateMessage\\\">\\n      Update Successfully\\n     </div>\\n\\n     <div class=\\\"add text-center\\\" *ngIf=\\\"message\\\">\\n      Add Successfully\\n  </div>\\n  </div>      \\n \\n\\n  <div class=\\\"col-md-6\\\">\\n    <app-details></app-details>\\n\\n  </div>\\n</div>\\n<!-- <div class=\\\"container\\\">\\n<div class=\\\"row text-center\\\">\\n  <form #personForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(personForm.value)\\\">\\n    <input type=\\\"hidden\\\" name=\\\"$key\\\" [(ngModel)]=\\\"data.$key\\\" class=\\\"form-control\\\" ngModel required>\\n\\n    <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"data.name\\\" class=\\\"form-control\\\" ngModel required>\\n    \\n    <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"data.email\\\" class=\\\"form-control\\\" ngModel required>\\n\\n    <button class=\\\"btn btn-round\\\">Click</button>\\n\\n  </form>\\n</div> -->\\n\\n<!-- <div class=\\\"data\\\" *ngFor=\\\"let Data of getData\\\">\\n  <h1>Name:{{Data.name}}</h1>\\n  <h1>Email:{{Data.email}}</h1>\\n  </div> -->\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport{DataService} from '../service/data.service';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n   getData:any;\n   message:boolean;\n   updateMessage:boolean;\n   submitted:boolean;\n  constructor(private dataservice:DataService) { }\n  formControls = this.dataservice.form.controls;\n  \n  ngOnInit() {\n    \n  }\n  onSubmit()\n {\n   this.submitted =true;\n  \n   if (this.dataservice.form.valid){\n    if(this.dataservice.form.get('$key').value == null)\n    this.dataservice.insertStudent(this.dataservice.form.value);\n   console.log(this.dataservice.form.value);\n  \n   this.dataservice.form.setValue({\n    $key: null,\n    name: '',\n    email: '',\n    phone:'',\n    age:'',\n    address:'',\n    \n  });\n  this.message=true;\n  setTimeout(() => this.message = false,3000);\n   }\n  \n }\n update(value)\n {\n   this.dataservice.updateStudent1(value);\n   this.updateMessage = true;\n   setTimeout(() => this.updateMessage =false,3000);\n   console.log(value)\n }\n  \n  \n \n}\n","import { Injectable } from '@angular/core';\r\nimport {AngularFireAuth} from 'angularfire2/auth';\r\nimport {Router} from '@angular/router'\r\n// import { HttpModule } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  authState: any = null;\r\n\r\n  constructor(private afAuth: AngularFireAuth, private router: Router) {\r\n    this.afAuth.authState.subscribe((auth) => {\r\n      this.authState = auth\r\n    });\r\n  }\r\n \r\n\r\n  \r\n  loginWithEmail(email: string, password: string) {\r\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password)\r\n      .then((user) => {\r\n        console.log(user);\r\n        return user;\r\n        // this.authState = user\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        throw error\r\n      });\r\n  }\r\n  signOut(): void {\r\n    this.afAuth.auth.signOut();\r\n    this.router.navigate(['/login'])\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {FormControl,FormGroup,Validators} from \"@angular/forms\";\r\nimport {AngularFireDatabase,AngularFireList } from 'angularfire2/database';\r\nimport {HomeComponent} from '../home/home.component';\r\nimport {Student} from '../service/student'\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\nexport class DataService{   \r\n    constructor(private firebase:AngularFireDatabase){}\r\n    studentList:AngularFireList<any>;\r\n    form = new FormGroup({\r\n        $key:new FormControl('null'),\r\n        name:new FormControl('',Validators.required),\r\n        email:new FormControl('',Validators.email),\r\n        phone:new FormControl('',Validators.required),\r\n        age:new FormControl('',Validators.required),\r\n        address:new FormControl('',Validators.required),\r\n\r\n\r\n\r\n\r\n\r\n    });\r\n    getStudent(){\r\n        this.studentList = this.firebase.list('students');\r\n        return this.studentList.snapshotChanges();\r\n    } \r\n \r\n    insertStudent(student:Student){\r\n        console.log(\"name\"+this.studentList)\r\n        this.studentList.push({\r\n            name:student.name,\r\n            email:student.email,\r\n            phone:student.phone,\r\n            age:student.age,\r\n            address:student.address,\r\n                    }); \r\n };\r\n updateStudent(student:Student){\r\n   this.form.setValue(student);\r\n } \r\nupdateStudent1(student:Student){\r\n    this.studentList.update(student.$key,\r\n        {\r\n            name:student.name,\r\n            email:student.email,\r\n            phone:student.phone,\r\n            age:student.age,\r\n            address:student.address,\r\n        });\r\n    }\r\n        deleteStudent($key:string){\r\n            this.studentList.remove($key);\r\n        }\r\n}","module.exports = \"\"","module.exports = \"<p>\\n  signup works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n   firebaseConfig :{\n    apiKey: \"AIzaSyBiEtNriQ6OaJDI9aLRlV0it1hiF2tqb3k\",\n    authDomain: \"studentdetailsfirebasedatabase.firebaseapp.com\",\n    databaseURL: \"https://studentdetailsfirebasedatabase.firebaseio.com\",\n    projectId: \"studentdetailsfirebasedatabase\",\n    storageBucket: \"studentdetailsfirebasedatabase.appspot.com\",\n    messagingSenderId: \"784134872537\"\n  }\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}